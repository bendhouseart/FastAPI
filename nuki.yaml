---
project_name:
  type: input
  message: Choose a base name for this project
  default: Base Project
project_slug:
  type: input
  message: Choose a project slug
  default: "{{ nuki.project_name|lower|replace(' ', '-') }}"

domain_main:
  type: input
  message: Enter a domain name if different from the project slug
  default: "{{nuki.project_slug}}"

ssh_key_name:
  type: input
  message: Enter a name for a new sshkey to log in to your instance
  default: mykey

instance_size:
  type: select
  message: |
    select the type of instance you wish to deploy:
    Instance	vCPU*	CPU Credits / hour Mem (GiB)	 Storage    Network Performance
    t2.nano	    1	    3	               0.5	         EBS-Only	Low
    t2.micro	1	    6	               1	         EBS-Only   Low to Moderate
    t2.small	1	    12	               2	         EBS-Only   Low to Moderate
    t2.medium	2	    24	               4	         EBS-Only   Low to Moderate
    t2.large	2	    36	               8	         EBS-Only	Low to Moderate
    t2.xlarge	4	    54	              16	         EBS-Only	Moderate
    t2.2xlarge	8	    81	              32	         EBS-Only	Moderate


  choices:
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - t2.2xlarge




secret_key:
  type: input
  message: Enter a value for the secret key for this project
  default: changethis
first_superuser:
  type: input
  message: Enter the name of the super user for the site
  default: "admin@{{nuki.domain_main}}"
first_superuser_password:
  type: input
  message: Enter a password for this super user
  default: changethis


# postgres setup
postgres_password:
  type: input
  message: Enter a password for postgres
  default: changethis
pgadmin_default_user:
  type: input
  message: Enter a user for pgadmin
  default: "{{nuki.first_superuser}}"
pgadmin_default_user_password:
  type: input
  message: Enter a password for pgadmin
  default: "{{nuki.first_superuser_password}}"

aws_region:
  type: input
  message: What AWS region?
  default: us-west-2
############################################################3
# optional set up eks
setup_eks:
  type: confirm
  message: Do you want to set up an EKS cluster?
eks_cluster_name:
  when: "{{ nuki.setup_eks }}"
  type: input
  message: What do you want to name your eks cluster?
  default: mycluster
eks_num_workers:
  when: "{{ nuki.setup_eks }}"
  type: input
  message: Number of workers on cluster?
  default: '1'
eks_cluster_autoscale:
  when: "{{ nuki.setup_eks }}"
  type: input
  message: Autoscale workers? Enter either true or false
  default: 'false'
eks_cluster_autoscale_min_workers:
  when: "{{ nuki.setup_eks }}"
  type: input
  message: Enter minimum number of workers
  default: '1'
eks_cluster_autoscale_max_workers:
  when: "{{ nuki.setup_eks }}"
  type: input
  message: Enter maximum number of workers
  default: '1'
############################################# end eks setup

# aws network setup

aws_network_setup:
  type: confirm
  message: Do you want to set up or connect to existing AWS infrastructure?
  default: false

vpc_name:
  when: "{{ nuki.aws_network_setup }}"
  type: input
  message: Enter name of VPC otherwise leave blank for none
  default: ""

azs:
  when: "{{ nuki.aws_network_setup }}"
  type: input
  message: Number of azs
  default: '1'

num_azs:
  when: "{{ nuki.aws_network_setup }}"
  type: input
  message: Again number of azs, this needs to be worded better
  default: '1'
iam_instance_profile:
  when: "{{ nuki.aws_network_setup }}"
  type: input
  message: iam_instance_profile to use
network_name:
  when: "{{ nuki.aws_network_setup }}"
  type: input
  message: Network name
create_sg:
  when: "{{ nuki.aws_network_setup }}"
  type: input
  message: Create a security group?
  default: 'false'
create:
  when: "{{ nuki.aws_network_setup }}"
  type: input
  message: Create a deployment
  default: 'true'
create_ebs_volume:
  when: "{{ nuki.aws_network_setup }}"
  type: input
  message: Create an EBS volume for this deployment (enter true or false)
  default: 'false'

render:
  type: nukikata
  context_file: nukikata.yaml
  context_key: cookiecutter
  existing_context: "{{ nuki }}"
  no_input: true
  output_dir: "{{ calling_directory }}"

post_render_action_:
  type: checkbox
  message: What do you want to do next?
  choices:
    - deploy: Deploy the instance?

prompt_user_to_enter_ssh_keys:
  type: confirm
  message: Confirm if you're ready to create new ssh keys

generate_ssh_keys_:
  when: "{{ nuki.prompt_user_to_enter_ssh_keys and nuki.ssh_key_name  }}"
  type: command
  message: creating ssh keys
  chdir: "{{ nuki._output_dir }}/{{ nuki.project_slug }}"
  command: |
    ssh-keygen -t rsa -f {{ nuki.ssh_key_name }} -q -N ''


init_terraform_single_:
  type: command
  chdir: "{{ nuki._output_dir }}/{{ nuki.project_slug }}"
  command: |
    sleep 1
    cp {{ nuki.ssh_key_name}}* terraform_single_instance/
    cd terraform_single_instance
    terraform init

init_terraform_cluster_:
  type: command
  chdir: "{{ nuki._output_dir }}/{{ nuki.project_slug }}"
  command: |
    sleep 1
    cp {{ nuki.ssh_key_name}}* terraform_managed_cluster/
    cd terraform_managed_cluster/
    terraform init